version : 2
jobs :
  build :
    working_directory : ~ / code
    docker :
      - image : circleci / android: api-27-alpha
    steps :
      - checkout
      - restore_cache :
          name : Restore Cache Gradle
          keys :
            - jars - {{checksum "build.gradle"}} - {{checksum "app / build.gradle"}}
            - jars-
      - run :
          name : Download Dependencies
          command : ./gradlew androidDependencies
      - run :
          name : Install Firebase CLI
          command : sudo npm install -g firebase-tools
      - save_cache :
          name : Save Cache Gradle
          key : jars - {{checksum "build.gradle"}} - {{checksum "app / build.gradle"}}
          paths :
            - ~ / .gradle
      - restore_cache :
          name : Restore Cache Gems
          keys :
            - v3-gems - {{checksum "Gemfile.lock"}}
            - v3-gems-
      - run :
          name : Bundle Install
          command : bundle install --path vendor / bundle
      - save_cache :
          name : Save Cache Gems
          key : v3-gems - {{checksum "Gemfile.lock"}}
          paths : vendor / bundle
      - run :
          name : Fastlane Build Application
          command : bundle exec fastlane build
      - deploy :
          name : Fastlane Deploy Application
          command : bundle exec fastlane deploy_firebase
#version: 2
#machine:
#  java:
#    version: oraclejdk8
#  environment:
#    FABRIC_API_KEY: ${CRASHLYTICS_API_TOKEN}
#jobs:
#  build:
#    working_directory: ~/code
#    docker:
#      - image: circleci/android:api-27-alpha
#    environment:
#      - JVM_OPTS: -Xmx3200m
#      - apiKey: ${CRASHLYTICS_API_TOKEN}
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#          command: sudo chmod +x ./gradlew
#      # - run:
#      #     name: Download Dependencies
#      #     command: yes | sdkmanager --licenses
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      # Generate apk
#      - run:
#          name: Build Debug
#          command: ./gradlew assembleDebug
#      - store_artifacts:
#          path: app/build/outputs/apk/debug/app-debug.apk
#          destination: app-debug.apk
#      - run:
#          name: Uploading on Crashlytics App Distribution
#          command: ./gradlew crashlyticsUploadDistributionDebug
#      # - run:
#      #     name: Run Tests
#      #     command: ./gradlew lint test
#      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
#      #     path: app/build/reports
#      #     destination: reports
#      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
#      #     path: app/build/test-results
#      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
